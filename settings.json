{
    "general": {
        "gamelog_path": "./data/gamelog.txt",
        "named_colors": {
            "white": "#ffffff",
            "silver": "#c0c0c0",
            "gray": "#808080",
            "black": "#000000",
            "red": "#ff0000",
            "maroon": "#800000",
            "yellow": "#ffff00",
            "olive": "#808000",
            "lime": "#00ff00",
            "green": "#008000",
            "aqua": "#00ffff",
            "teal": "#008080",
            "blue": "#0000ff",
            "navy": "#000080",
            "fuchsia": "#ff00ff",
            "purple": "#800080"
        }
    },
    "filters": [
        {
            "group": "battle_minor",
            "category": "hitevents_miss",
            "expressions": [
                "The (.+), lightly tapping the target!",
                "The (.+), but the attack glances away!",
                "(.+), but the attack is deflected by The (.+)'s (.+)!",
                "(.+), but it is deflected by The (.+)'s (.+)!",
                "The (.+) strikes at The (.+) but the shot is parried!",
                "The (.+) strikes at The (.+) but the shot is ((deftly )|(easily )|(narrowly )|(just barely )|(effortlessly )|())parried by (.+)!",
                "The (.+) strikes at The (.+) but the shot is ((deftly )|(easily )|(narrowly )|(just barely )|(effortlessly )|())deflected by (.+)!",
                "The (.+) The (.+) but the shot is blocked(.+)",
                "The flying (.+) misses (.+)!",
                "(.+) blocks The flying (.+)!",
                "The (.+) misses The (.+)!"
            ],
            "color": "#c0c0c0"
        },
        {
            "group": "battle_minor",
            "category": "status",
            "expressions": [
                "The (.+) (has been stunned|is knocked over|has been knocked unconscious|stands up|passes out|falls over|regains consciousness|is no longer stunned).+",
                "The (.+) (charges at|collides with) The (.+)!",
                "They tangle together and (.+)!",
                "The (.+) bounces backward!",
                "The (.+) collapses and falls to the ground from over-exertion\\.",
                "The (.+) looks surprised by the ferocity of ((The (.+)'s)|(Your)) onslaught!"
            ],
            "color": "#c0c0c0"
        },
        {
            "group": "battle_minor",
            "category": "block_dodge",
            "expressions": [
                "The (.+) (blocks|jumps away|jumps out|scrambles out of|scrambles away|rolls out of|rolls away|falls over).+",
                "(((.+) jumps)|(You jump)) away from The flying (.+)!",
                "(((.+) jumps)|(You jump)) away from the (.+)!",
                "(.+) bats The ((spinning)|(flying)) (.+) out of the air!",
                "(.+) scrambles away from The flying (.+)!",
                "(.+) strikes at (.+) but the shot is blocked with (.+)!",
                "(((.+) misses)|(You miss)) (.+)!",
                "(.+) jumps away from The spinning (.+)!",
                "(.+) blocks The spinning (.+)!",
                "(.+) bats The spinning (.+) aside!",
                "(.+) scrambles away from The spinning (.+)!",
                "(.+) rolls away from The spinning (.+)!",
                "The (.+) bats The (.+) aside.+!"
            ],
            "color": "#c0c0c0"
        },
        {
            "group": "battle",
            "category": "hitevents",
            "expressions": [
                "The (.+), (bruising|chipping|shattering|fracturing|denting) (it|the).+",
                "The (.+), jamming the (.+) through the (.+)'s (.+) and shattering the (.+)'s (.+)!",
                "The (.+), jamming the (.+) through the (.+)'s (.+) and fracturing the (.+)'s (.+)!",
                "The (.+), tearing apart the (.+)!",
                "The (.+), tearing apart the (.+) and bruising the (.+)!",
                "The (.+), tearing apart the (.+) and bruising the (.+) through the (.+)!",
                "The (.+), tearing it apart through the (.+)!",
                "The (.+), tearing the (.+)",
                "The (.+), tearing the (.+) and bruising the (.+)!",
                "The (.+), tearing the (.+) through the (.+)!",
                "The (.+) and the severed part sails off in an arc!",
                "The (.+) takes the full force of the impact(.+)",
                "The flying (.+) strikes (.+)",
                "The (.+) strikes The (.+)"
            ],
            "color": "#ff0000"
        },
        {
            "group": "battle",
            "category": "status",
            "expressions": [
                "The (.+) (vomits|retches|looks sick|looks even more sick|trouble breathing).+",
                "(.+) skids along the ground!",
                "The (.+) skips across the water!",
                "(.+) skids along the ground, (.+)!",
                "(.+) skids along the ground and the (.+) splits in gore!",
                "(.+) has been stunned!",
                "(.+) has been stunned again!",
                "(.+) is no longer stunned\\.",
                "(.+) gives in to pain\\.",
                "(.+) passes out\\.",
                "(.+) looks sick!",
                "(.+) looks even more sick!",
                "(.+) vomits\\.",
                "(.+) retches\\.",
                "The vomit disappears into the water\\.",
                "The vomit burns away in the lava\\.",
                "The vomit splatters into the shallow puddle of water\\.",
                "(.+) is having trouble breathing!",
                "(.+) is having more trouble breathing!",
                "(.+) has become enraged!",
                "(.+) is no longer enraged\\.",
                "(.+) has been knocked unconscious!",
                "(.+) passes out from exhaustion\\.",
                "(.+) regains consciousness\\.",
                "(.+) is feeling sluggish!",
                "(.+) looks numb!",
                "(.+) is partially paralyzed!",
                "(.+) is completely paralyzed!",
                "(.+) has fully overcome the paralysis\\.",
                "(.+) has been bitten by (.+)!",
                "(.+) is injected into the (.+)'s (.+) blood!",
                "(.+) cancels (.+): Paralyzed\\.",
                "(.+) cancels (.+): Resting injury\\.",
                "[tT]he (.+) rolls into a ball\\.",
                "[tT]he (.+) unrolls\\."
            ],
            "color": "#ff0000"
        },
        {
            "group": "battle",
            "category": "battle",
            "expressions": [
                "(.+) is propelled away by the force of the blow!",
                "(.+) counterstrikes!",
                "The (.+) manages to stop where The (.+) used to be\\.",
                "The (.+) rushes by The (.+)!",
                "The (.+) is knocked over(.+)",
                "They tangle together and (.+)!",
                "The (.+) leaps at The (.+)!",
                "The (.+) slams into an obstacle!",
                "The (.+) slams into an obstacle and falls over!",
                "The (.+) slams into the (.+)!",
                "(.+) pulls out and drops the (.+)\\.",
                "(.+) lets the (.+) (.+) drop away as ((He)|(She)|(It)) attacks\\.",
                "(.+) loses hold of the (.+)\\.",
                "The (.+) grabs The (.+) by the (.+) with ((his)|(her)|(its)) (.+)!",
                "The (.+) locks The (.+)'s (.+) with The (.+)'s (.+)!",
                "The (.+) adjusts the grip of The (.+) on The (.+)\\.",
                "The (.+) releases the grip of The (.+)'s (.+) from The (.+)'s (.+)\\.",
                "The (.+) releases the grip of The (.+) on The (.+)\\.",
                "The (.+) releases the joint lock of The (.+)'s (.+) on The (.+)'s (.+)\\.",
                "The (.+) breaks the grip of The (.+) from The (.+)!",
                "The (.+) breaks the grip of The (.+) on The (.+)\\.",
                "The (.+) is unable to break the grip of The (.+)'s (.+) on The (.+)'s (.+)!",
                "The (.+) places a chokehold on The (.+)'s (.+) with The (.+)'s (.+)!",
                "The (.+) strangles The (.+)'s (.+)!",
                "The (.+) throws The (.+) by the (.+) with The (.+)!",
                "The (.+) struggles in vain against the grip of The (.+) on The (.+)\\.",
                "The (.+) shakes The (.+) around by the (.+)!",
                "The (.+) is ripped away and remains in The (.+)'s grip!",
                "(.+) latches on firmly!",
                "(.+) latches on firmly to (.+)!",
                "(.+) bends (.+) and (.+) collapses!",
                "The (.+) takes The (.+) down by the (.+) with The (.+)'s (.+)!",
                "The (.+) skids along the ground through the (.+)!",
                "(.+) cancels (.+): Too injured\\.",
                "The (.+) attack is interrupted!"
            ],
            "color": "#ff0000"
        },
        {
            "group": "battle",
            "category": "breath",
            "expressions": [
                "The (.+) breathes a cloud of (.+) ((frozen)|(boiling)) extract!",
                "The (.+) breathes a (cloud|glob) of (.+)",
                "The (.+) breathes fire!",
                "The (.+) hurls a ball of fire!",
                "The (.+) breathes a glob of forgotten beast frozen extract!",
                "(.+) is caught in a (cloud|burst) of (.+) extract!",
                "(.+) is caught in a cloud of (.+)!",
                "(.+) blocks the breath\\.",
                "(.+) blocks the fire\\.",
                "(.+) shoots out thick strands of webbing!",
                "(.+) is caught up in the web!",
                "(.+) is partially free of the web\\.",
                "(.+) is completely free of the web\\.",
                "(.+) cancels (.+): Webbed\\."
            ],
            "color": "#ff0000"
        },
        {
            "group": "battle",
            "category": "gore",
            "expressions": [
                "The (.+) gouges The (.+)'s (.+) with The (.+)'s (.+)!",
                "A (.+) has been severed!",
                "A (.+) has been torn!",
                "An (.+) has been opened by the strike and a (.+) has been torn!",
                "The (.+) has lodged firmly in the wound!",
                "(.+) twists the embedded (.+) around in (.+)'s (.+)!",
                "(.+) pulls on the embedded (.+)\\.",
                "(.+) pulls out and releases the (.+)\\.",
                "((An artery)|(A major artery)) has been opened by the ((strike)|(attack))(.*)!",
                "An artery in the (.+) has been opened by the ((strike)|(attack))(.*)!",
                "A major artery in the (.+) has been opened by the ((strike)|(attack))!",
                "The guts pops out of the wound!",
                "Many nerves have been severed(.*)!",
                "A tendon has been strained!",
                "A tendon in the (.+) has been bruised!",
                "A ligament in (.+) has been (.+)!",
                "The (.+) is smashed into the (.+), an unrecognizable mass!",
                "(.+) in the (.+) with (.+) and the injured part is cloven asunder!",
                "(.+) blood is sucked out of the wound!"
            ],
            "color": "#ff0000"
        },
        {
            "group": "battle",
            "category": "strikes",
            "expressions": [
                "The (.+) (leaps at|punches|catches|snatches at|stabs|grabs|hacks|pushes|misses|slashes|shakes|blocks|gores|strangles|strikes|scratches|kicks|attacks|lashes|slaps|bashes|bites|strikes at|punches|releases|throws|takes|locks|bends|places a chokehold on|gouges) The (.+)"
            ],
            "color": "#ff0000"
        },
        {
            "group": "battle_trance",
            "category": "trance",
            "expressions": [
                "(.+) has entered a martial trance!",
                "(.+) has left the martial trance\\."
            ],
            "color": "#ff00ff"
        },
        {
            "group": "JobSuspension",
            "category": "JobSuspension",
            "expressions": [
                "The dwarves suspended a linkage from (.+) Lever\\.",
                "The dwarves suspended a linkage from Pressure Plate\\.",
                "The (.+) suspended the construction of (.+)\\.",
                "(.+) cancels Construct Building: Item blocking site\\.",
                "(.+) cancels Construct Building: Cannot reach site\\.",
                "(.+) cancels Construct Building: Building site submerged\\.",
                "(.+) cancels Construct Building: Creature occupying site\\.",
                "(.+) cancels Link a Building to Trigger: Cannot reach site\\.",
                "The (.+) were unable to complete the (.+)\\."
            ],
            "color": "#c60000"
        },
        {
            "group": "Production",
            "category": "EquipmentMismatch",
            "expressions": [
                "(.+) cancels Pickup Equipment: Equipment mismatch\\."
            ],
            "color": "#930000"
        },
        {
            "group": "Production",
            "category": "foodAndDrinkCancelations",
            "expressions": [
                "(.+) cancels Drink: Water source vanished\\.",
                "(.+) cancels Drink: Well dry\\.",
                "(.+) cancels Fill Waterskin Well dry\\.",
                "(.+) cancels Fill Waterskin: Water source vanished\\.",
                "(.+) cancels Clean Self Well dry\\.",
                "(.+) cancels Drink: Water source contaminated\\.",
                "(.+) cancels Give Water: No water source\\.",
                "(.+) cancels Apply Cast: No water source\\.",
                "(.+) cancels Clean Patient: No water source\\.",
                "(.+) cancels Place In Traction: No available traction bench\\.",
                "(.+) cancels Fill Pond: No water source\\.",
                "(.+) cancels Give Water: Need empty bucket\\.",
                "(.+) cancels Give Water: Animal inaccessible\\.",
                "(.+) cancels Clean Self: Water source vanished\\.",
                "(.+) cancels Clean Self: Well dry\\.",
                "(.+) cancels Give Food: No food available\\.",
                "(.+) cancels (.+): Hunting vermin for food\\.",
                "(.+) cancels Eat: Item inaccessible\\.",
                "(.+) cancels (.+): Getting food\\.",
                "(.+) cancels (.+): Getting something to drink\\.",
                "(.+) cancels (.+): Getting water\\.",
                "(.+) cancels Tame (.+): No food available\\."
            ],
            "color": "#930000"
        },
        {
            "group": "Production",
            "category": "creatureInterruption",
            "expressions": [
                "(.+) cancels (.+): Interrupted by (.+)\\."
            ],
            "color": "#930000"
        },
        {
            "group": "Production",
            "category": "production",
            "expressions": [
                "Jobs removed from unpowered Magma Forge\\.",
                "Jobs removed from unpowered Magma Smelter\\.",
                "(.+) has altered the prices of goods\\.",
                "(.+) has been completed\\."
            ],
            "color": "#930000"
        },
        {
            "group": "Production",
            "category": "farmCancelations",
            "expressions": [
                "(.+), (.+) cancels Plant Seeds: (.+)"
            ],
            "color": "#930000"
        },
        {
            "group": "Production",
            "category": "misc",
            "expressions": [
                "(.+) cancels (.+): (.+)"
            ],
            "color": "#930000"
        },
        {
            "group": "Production",
            "category": "cancelations",
            "expressions": [
                "The (.+) were unable to complete the (.+)\\."
            ],
            "color": "#930000"
        },
        {
            "group": "masterpiece",
            "category": "",
            "expressions": [
                "(.+) has created a masterpiece!",
                "(.+) has cooked a masterpiece!",
                "(.+) has created a masterpiece (.+)!",
                "(.+) has engraved a masterpiece!",
                "(.+) has constructed a masterpiece!",
                "(.+) has improved a (.+) masterfully!",
                "A masterwork of (.+) has been lost!"
            ],
            "color": null
        },
        {
            "group": "beekeeping",
            "category": "beekeeping",
            "expressions": [
                "(.+) has been stung by a (.+)!",
                "(.+) have been stung by a (.+)!"
            ],
            "color": "#ffff80"
        },
        {
            "group": "deaths",
            "category": "directDeaths",
            "expressions": [
                "(.+) has drowned\\.",
                "(.+) has died ((of)|(from)) thirst\\.",
                "(.+) has starved to death\\.",
                "(.+) has been struck down\\.",
                "(.+) has been crushed by a drawbridge\\.",
                "(.+) has died after colliding with an obstacle\\.",
                "(.+) slams into an obstacle and blows apart!",
                "(.+) has bled to death\\.",
                "(.+) has died of old age\\.",
                "(.+) has suffocated\\.",
                "(.+) has been encased in ice\\.",
                "(.+) has been encased in cooling lava\\.",
                "(.+) has been shot and killed\\.",
                "(.+) has succumbed to infection\\.",
                "(.+) has been impaled on spikes\\.",
                "(.+) has been killed by a flying object\\.",
                "(.+) has been killed by a trap\\.",
                "(.+) has been murdered by (.+)!",
                "(.+) has been scared to death by the (.+)!",
                "(.+) has collapsed\\."
            ],
            "color": "#ffff00"
        },
        {
            "group": "deaths",
            "category": "foundDeaths",
            "expressions": [
                "(.+) has been found dead\\.",
                "(.+) has been found dead, (.+)",
                "(.+) has been found, starved to death\\."
            ],
            "color": "#ffff00"
        },
        {
            "group": "deaths",
            "category": "slaughtering",
            "expressions": [
                "(.+) has been slaughtered\\."
            ],
            "color": "#ffff00"
        },
        {
            "group": "dfhack",
            "category": "elected",
            "expressions": [
                "(.+), (.+) has been re-elected\\.",
                "(.+) has been elected mayor\\.",
                "(.+) became mayor\\.",
                "Mayor position is now vacant\\.",
                "Expedition leader was replaced by mayor\\.",
                "(.+) became expedition leader\\.",
                "Expedition leader position is now vacant\\."
            ],
            "color": "#ffffff"
        },
        {
            "group": "dfhack",
            "category": "misc",
            "expressions": [
                "Siege was broken\\.",
                "(.+) is now rusty (.+)\\.",
                "(.+) is now very rusty (.+)\\.",
                "(.+) is no longer rusty (.+)\\.",
                "(.+) is no longer very rusty (.+)\\.",
                "(.+) has became Proficient (.+)\\.",
                "(.+) has became Accomplished (.+)\\.",
                "(.+) has became Legendary (.+)\\.",
                "(.+): I have mastered (.+)\\.  That was very satisfying!"
            ],
            "color": "#ffffff"
        },
        {
            "group": "dfhack",
            "category": "workshopCompletion",
            "expressions": [
                "(.+) was built\\."
            ],
            "color": "#ffffff"
        },
        {
            "group": "dfhack",
            "category": "automation",
            "expressions": [
                "Marked \\d+ items (to|for) (.+)"
            ],
            "color": "#ffffff"
        },
        {
            "group": "fishing",
            "category": "",
            "expressions": [
                "There is nothing to catch in the (.+)\\."
            ],
            "color": null
        },
        {
            "group": "interactions",
            "category": "necromancy",
            "expressions": [
                "(.+) gestures!",
                "You gesture!",
                "(.+) shudders and begins to move!"
            ],
            "color": "#ff0000"
        },
        {
            "group": "interactions",
            "category": "werebeast",
            "expressions": [
                "(.+) has transformed into a were(.+)!",
                "(.+) has transformed into a (.+)!"
            ],
            "color": "#ff0000"
        },
        {
            "group": "intruders",
            "category": "beast",
            "expressions": [
                "The Forgotten Beast (.+) has come!  ((A)|(An)) (.+)",
                "The (.+) Titan (.+) has come!  ((A)|(An)) (.+)",
                "The (.+) has come!  ((A)|(An)) (.+)"
            ],
            "color": "#ff0000"
        },
        {
            "group": "intruders",
            "category": "intruders",
            "expressions": [
                "The dead walk\\.  Hide while you still can!",
                "A vile force of darkness has arrived!",
                "An ambush!  Curse them!",
                "An ambush!  Drive them out!",
                "Ambush!",
                "An ambush!  Curse them!",
                "A kidnapper has made off with (.+)!",
                "Snatcher!( ?) Protect the children!",
                "A (.+)!  Drive it away!",
                "Thief!  Protect the hoard from skulking filth!",
                "(.+) has stolen (.+)!",
                "(.+) batters (.+)!",
                "(.+) destroyed by (.+)\\.",
                "(.+) toppled by (.+)\\."
            ],
            "color": "#ff0000"
        },
        {
            "group": "intruders",
            "category": "ghost",
            "expressions": [
                "(.+) has risen and is haunting the fortress!",
                "(.+) can be heard howling throughout the fortress!",
                "(.+) has been put to rest\\.",
                "(.+) has grown to become a Ghostly (.+) Child\\.",
                "(.+) has grown to become a Ghost\\.",
                "(.+) is following (.+)!",
                "a (.+) has been misplaced.  No doubt (.+), Ghostly (.+) is to blame!"
            ],
            "color": "#ff0000"
        },
        {
            "group": "mandates",
            "category": "mandates",
            "expressions": [
                "(.+) has mandated the construction of certain goods\\.",
                "(.+) has imposed a ban on certain exports\\.",
                "(.+) has ended a mandate\\.",
                "(.+)'s mandate has ended\\.",
                "(.+)'s mandates have ended\\.",
                "(.+) has a new demand\\.",
                "(.+) has forgotten a demand\\."
            ],
            "color": "#ffffff"
        },
        {
            "group": "mining",
            "category": "enviromentalHazard",
            "expressions": [
                "The (.+) is caught in a pool of (lava|magma)!",
                "The (.+) is caught in a cloud of steam!",
                "The (.+) is caught in a cloud of boiling magma!",
                "The (.+) is caught in a lava mist!",
                "The (.+) is caught in a burst of (.+)!"
            ],
            "color": "#80ffff"
        },
        {
            "group": "mining",
            "category": "mining",
            "expressions": [
                "You have struck (.+)!",
                "Raw adamantine!  Praise the miners!",
                "You have discovered an expansive cavern deep underground\\.",
                "You have discovered an eerie cavern\\.  The air above the dark stone floor is alive with vortices of purple light and dark, boiling clouds\\.  Seemingly bottomless glowing pits mark the surface\\.",
                "Horrifying screams come from the darkness below!",
                "You have discovered a (.+)",
                "Digging designation cancelled: damp stone located\\.",
                "Digging designation cancelled: warm stone located\\.",
                "A section of the cavern has collapsed!",
                "Something has collapsed on the surface!"
            ],
            "color": "#80ffff"
        },
        {
            "group": "moods",
            "category": "moods",
            "expressions": [
                "(.+) cancels (.+): Taken by mood\\.",
                "(.+) is taken by a fey mood!",
                "(.+) withdraws from society\\.\\.\\.",
                "(.+) begins to stalk and brood\\.\\.\\.",
                "(.+) has been possessed!",
                "(.+) has been possessed!",
                "(.+) looses a roaring laughter, fell and terrible!",
                "(.+) looses a roaring laughter, fell and terrible!",
                "(.+) has begun a mysterious construction!",
                "(.+) cancels (.+): Went insane\\.",
                "(.+) has gone berserk!",
                "(.+) has gone stark raving mad!",
                "(.+) is stricken by melancholy!",
                "(.+) has claimed a (.+)\\.",
                "(.+) has created (.+), a (.+)!"
            ],
            "color": "#ff00ff"
        },
        {
            "group": "moods",
            "category": "depression",
            "expressions": [
                "(.+), (.+) is stumbling around obliviously!",
                "(.+), (.+) has slipped into depression\\.\\.\\."
            ],
            "color": "#ff00ff"
        },
        {
            "group": "moods",
            "category": "tantrum",
            "expressions": [
                "(.+) is throwing a tantrum, possessed by (.+), Ghostly (.+)!",
                "(.+) is throwing a tantrum!",
                "(.+) has calmed down\\.",
                "(.+) cancels (.+): Throwing tantrum\\."
            ],
            "color": "#ff00ff"
        },
        {
            "group": "named_item",
            "category": "",
            "expressions": [
                "(.+) has grown attached to a (.+)!",
                "(.+) has bestowed( ?) the name (.+) upon a (.+)!"
            ],
            "color": null
        },
        {
            "group": "animals",
            "category": "training",
            "expressions": [
                "(.+) has reverted to a wild state!",
                "(.+) has forgotten ((her)|(his)) training!",
                "The (.+) of The (.+) now know a few facts about (.+) training\\.",
                "The (.+) of The (.+) have attained a general familiarity with (.+) training methods\\.",
                "The (.+) of The (.+) are now quite knowledgeable (.+) trainers\\."
            ],
            "color": "#00ff40"
        },
        {
            "group": "animals",
            "category": "vermin",
            "expressions": [
                "(.+) has gnawed its way out of confinement!",
                "(.+) has gnawed its way out of confinement!"
            ],
            "color": "#00ff40"
        },
        {
            "group": "animals",
            "category": "grown",
            "expressions": [
                "An animal has grown to become a (.+)"
            ],
            "color": "#00ff40"
        },
        {
            "group": "animals",
            "category": "birth",
            "expressions": [
                "(.+) has given birth to (.+)",
                "(.+) have hatched\\."
            ],
            "color": "#00ff40"
        },
        {
            "group": "animals",
            "category": "drink",
            "expressions": [
                "(.+) has guzzled some (.+)!"
            ],
            "color": "#00ff40"
        },
        {
            "group": "animals",
            "category": "catAdoption",
            "expressions": [
                "(.+) has adopted (.+)\\."
            ],
            "color": "#00ff40"
        },
        {
            "group": "social",
            "category": "missing",
            "expressions": [
                "(.+) has been missing for a week\\."
            ],
            "color": "#80ff00"
        },
        {
            "group": "social",
            "category": "social",
            "expressions": [
                "The (.+) and the (.+) have married\\.  Congratulations!",
                "They have organized a wedding reception at (.+)\\.",
                "They have decided to forego any formal celebrations\\.",
                "(.+) has organized a party at (.+)\\.",
                "(.+) has given birth to a boy\\.",
                "(.+) has given birth to a girl\\.",
                "(.+) has given birth to ((twins)|(triplets))\\.",
                "(.+) cancels (.+): Seeking Infant\\.",
                "(.+) cancels Seek Infant: Infant inaccessible\\.",
                "(.+) has grown to become a ((Dwarven )?)Child\\.",
                "(.+) has grown to become a (.+)\\.",
                "(.+) is more experienced\\.",
                "(.+) has become a expedition leader\\.",
                "(.+) has become a militia commander\\.",
                "(.+) and the surrounding lands have been made a barony\\.",
                "(.+) and the surrounding lands have been made a county\\.",
                "(.+) and the surrounding lands have been made a duchy\\.",
                "(.+), being the rightful heir, has inherited the position of ((king)|(queen)) of The (.+)\\."
            ],
            "color": "#80ff00"
        },
        {
            "group": "profession",
            "category": "professionChange",
            "expressions": [
                "(.+) has become a (.+)\\."
            ],
            "color": "#c0c0c0"
        },
        {
            "group": "migrants",
            "category": "migrants",
            "expressions": [
                "The fortress attracted no migrants this season\\.",
                "No one even considered making the journey to such a cursed death-trap this season\\.",
                "Some migrants have arrived\\.",
                "Some migrants have arrived, despite the danger\\.",
                "Some migrants have decided to brave this terrifying place, knowing it may be their tomb\\."
            ],
            "color": "#954a4a"
        },
        {
            "group": "seasons",
            "category": "seasons",
            "expressions": [
                "(Spring has arrived!)|(Spring has arrived on the calendar\\.)",
                "(It is now summer\\.)|(Summer has arrived on the calendar\\.)",
                "(Autumn has come\\.)|(Autumn has arrived on the calendar\\.)",
                "(Winter is upon you\\.)|(Winter has arrived on the calendar\\.)",
                "The wet season has arrived!",
                "The dry season has come\\.",
                "Nothing has arrived on the calendar."
            ],
            "color": "#ffff80"
        },
        {
            "group": "weather",
            "category": "weather",
            "expressions": [
                "It has started raining\\.",
                "It is raining (.+)\\.",
                "It is raining (.+)!",
                "A cloud of (.+) has drifted nearby!",
                "A snow storm has come\\.",
                "The weather has cleared\\."
            ],
            "color": "#ffffff"
        },
        {
            "group": "trading",
            "category": "trading",
            "expressions": [
                "A caravan from (.+) has arrived\\.",
                "A (.+) caravan from (.+) has arrived\\.",
                "The (([oO]utpost)|([vV]illage)|([mM]etropolis)) [lL]iaison (.+) from (.+) has arrived\\.",
                "A (.+) diplomat from (.+) has arrived\\.",
                "The elf (.+) from (.+) has arrived\\.",
                "The human (.+) from (.+) has arrived\\.",
                "The (.+) from (.+) has arrived\\.",
                "Merchants have arrived and are unloading their goods\\.",
                "The merchants from (.+) will be leaving soon\\.",
                "The merchants from (.+) have embarked on their journey\\.",
                "Their wagons have bypassed your inaccessible site\\.",
                "The merchants need a trade depot to unload their goods\\.",
                "(.+) cancels Trade at Depot: ((Not responsible for trade)|(Not broker))\\.",
                "No outpost liaison\\?  How curious\\.\\.\\."
            ],
            "color": "#80ff80"
        },
        {
            "group": "system",
            "category": "seed",
            "expressions": [
                "Seed: (.+)",
                "History Seed: (.+)",
                "Name Seed: (.+)",
                "Creature Seed: (.+)"
            ],
            "color": "#808080"
        },
        {
            "group": "system",
            "category": "system",
            "expressions": [
                "\\*\\*\\* STARTING NEW GAME \\*\\*\\*",
                "Generating world using parameter set (.+)",
                "\\*\\* Starting New Outpost \\*\\*",
                "\\*\\* Starting New Outpost \\*\\*",
                "\\*\\* Starting Reclaim \\*\\*",
                "\\*\\* Loading Fortress \\*\\*",
                "\\*\\* Starting New Arena \\*\\*",
                "Loaded (.+) at coordinates (.+)"
            ],
            "color": "#808080"
        },
        {
            "group": "system",
            "category": "load",
            "expressions": [
                "Loaded the fortress (.+)"
            ],
            "color": "#808080"
        },
        {
            "group": "emotion",
            "category": "emotion",
            "expressions": [
                "(.+), (.+): (.+)",
                "(.+): (.+)"
            ],
            "color": "#804000"
        }
    ],
    "highlights": {
        "Miner": "silver",
        "Woodworker": "yellow",
        "Carpenter": "yellow",
        "Bowyer": "yellow",
        "Woodcutter": "yellow",
        "Stoneworker": "white",
        "Engraver": "white",
        "Mason": "white",
        "Ranger": "green",
        "Animal Caretaker": "green",
        "Animal Trainer": "green",
        "Hunter": "green",
        "Trapper": "green",
        "Animal Dissector": "green",
        "Metalsmith": "gray",
        "Furnace Operator": "gray",
        "Weaponsmith": "gray",
        "Armorer": "gray",
        "Blacksmith": "gray",
        "Metalcrafter": "gray",
        "Jeweler": "lime",
        "Gem Cutter": "lime",
        "Gem Setter": "lime",
        "Craftsman": "blue",
        "Craftsdwarf": "blue",
        "Woodcrafter": "blue",
        "Stonecrafter": "blue",
        "Leatherworker": "blue",
        "Bone Carver": "blue",
        "Weaver": "blue",
        "Clothier": "blue",
        "Glassmaker": "blue",
        "Potter": "blue",
        "Glazer": "blue",
        "Wax Worker": "blue",
        "Strand Extractor": "blue",
        "Fishery Worker": "navy",
        "Fisherman": "navy",
        "Fish Dissector": "navy",
        "Fish Cleaner": "navy",
        "Farmer": "olive",
        "Cheese Maker": "olive",
        "Milker": "olive",
        "Cook": "olive",
        "Thresher": "olive",
        "Miller": "olive",
        "Butcher": "olive",
        "Tanner": "olive",
        "Dyer": "olive",
        "Planter": "olive",
        "Herbalist": "olive",
        "Brewer": "olive",
        "Soap Maker": "olive",
        "Potash Maker": "olive",
        "Lye Maker": "olive",
        "Wood Burner": "olive",
        "Shearer": "olive",
        "Spinner": "olive",
        "Presser": "olive",
        "Beekeeper": "olive",
        "Engineer": "red",
        "Mechanic": "red",
        "Siege Engineer": "red",
        "Siege Operator": "red",
        "Pump Operator": "red",
        "Clerk": "purple",
        "Administrator": "purple",
        "Trader": "purple",
        "Architect": "purple",
        "Alchemist": "purple",
        "Bone Doctor": "purple",
        "Diagnoser": "purple",
        "Doctor": "purple",
        "Suturer": "purple",
        "Surgeon": "purple",
        "broker": "purple",
        "Merchant": "gray",
        "Hammerman": "purple",
        "Hammer Lord": "fuchsia",
        "Spearman": "olive",
        "Spearmaster": "yellow",
        "Crossbowman": "green",
        "Elite Crossbowman": "lime",
        "Wrestler": "silver",
        "Elite Wrestler": "white",
        "Axeman": "navy",
        "Axe Lord": "blue",
        "Swordsman": "teal",
        "Swordmaster": "aqua",
        "Maceman": "maroon",
        "Mace Lord": "red",
        "Pikeman": "olive",
        "Pikemaster": "yellow",
        "Bowman": "green",
        "Elite Bowman": "lime",
        "Blowgunner": "gray",
        "Master Blowgunner": "gray",
        "Lasher": "gray",
        "Master Lasher": "gray",
        "Recruit": "gray",
        "Hunting Animal": "silver",
        "War Animal": "gray",
        "Master Thief": "gray",
        "Thief": "gray",
        "Peasant": "teal",
        "Dwarven Child": "maroon",
        "Child": "maroon",
        "Baby": "maroon",
        "Drunk": "olive",
        "Monster Slayer": "olive",
        "Scout": "olive",
        "Beast Hunter": "olive",
        "Snatcher": "olive",
        "Mercenary": "olive",
        "Gelder": "olive",
        "Performer": "olive",
        "Poet": "purple",
        "Bard": "purple",
        "Dancer": "purple",
        "Sage": "purple",
        "Scholar": "purple",
        "Philosopher": "purple",
        "Mathematician": "purple",
        "Historian": "purple",
        "Astronomer": "purple",
        "Naturalist": "purple",
        "Chemist": "purple",
        "Geographer": "purple",
        "Scribe": "purple",
        "Papermaker": "blue",
        "Bookbinder": "blue",
        "Tavern Keeper": "purple",
        "Criminal": "gray",
        "Peddler": "silver",
        "Prophet": "white",
        "Pilgrim": "white",
        "Monk": "white",
        "Messenger": "purple",
        "queen": "yellow",
        "king": "yellow",
        "mayor": "yellow",
        "baronness": "yellow",
        "baron": "yellow",
        "chief medical dwarf": "yellow",
        "outpost liaison": "yellow",
        "manager": "yellow",
        "captain of the guard": "yellow",
        "militia captain": "yellow",
        "enraptured": "aqua",
        "pleasure": "aqua",
        "very pleased": "aqua",
        "How pleasurable": "aqua",
        "pleases me": "aqua",
        "admirable": "aqua",
        "admiration": "aqua",
        "very fond": "aqua",
        "fondness": "aqua",
        "sympathy": "aqua",
        "sympathetic": "aqua",
        "affection": "aqua",
        "adoration": "aqua",
        "love": "aqua",
        "tenderness": "aqua",
        "passionate": "aqua",
        "aroused": "aqua",
        "caring": "aqua",
        "care so much": "aqua",
        "really care": "aqua",
        "proud": "aqua",
        "gratitude": "aqua",
        "very grateful": "aqua",
        "repentant": "aqua",
        "empathy": "aqua",
        "wonder": "aqua",
        "wondrous": "aqua",
        "spiritually moved": "aqua",
        "feel so good": "green",
        "excited": "green",
        "exciting": "green",
        "euphoric": "green",
        "joyable": "green",
        "joyous": "green",
        "enjoyment": "green",
        "enjoyed": "green",
        "happy": "green",
        "gaiety": "green",
        "amused": "green",
        "amusing": "green",
        "blissful": "green",
        "could be bliss": "green",
        "jovial": "green",
        "delighted": "green",
        "some delight": "green",
        "delightful": "green",
        "content": "green",
        "contented": "green",
        "satisfied": "green",
        "satisfying": "green",
        "elated": "green",
        "relieved": "green",
        "free": "green",
        "expectant": "green",
        "triumph": "green",
        "hope": "green",
        "optimistic": "green",
        "pretty good": "green",
        "feeling great": "green",
        "exhilarated": "navy",
        "exhilarating": "navy",
        "interested": "navy",
        "amazing": "navy",
        "interesting": "navy",
        "astonished": "navy",
        "awe": "navy",
        "eager": "navy",
        "accepting": "gray",
        "ambivalent": "gray",
        "no pleasure": "gray",
        "not filled with delight": "gray",
        "do not see the bliss in this": "gray",
        "not enjoying": "gray",
        "not uneasy": "gray",
        "not resent": "gray",
        "doesn't excite me": "gray",
        "accept this": "gray",
        "not much to admire here": "gray",
        "suspicious": "purple",
        "annoyed": "olive",
        "grouchy": "olive",
        "exasperated": "olive",
        "exasperating": "olive",
        "irritated": "olive",
        "irritating": "olive",
        "dislike": "olive",
        "bitter": "olive",
        "resentful": "olive",
        "resent": "olive",
        "contemptuous": "olive",
        "contempt": "olive",
        "lonely": "olive",
        "very uneasy": "olive",
        "uneasy": "olive",
        "worrisome": "olive",
        "worried": "olive",
        "restless": "olive",
        "guilty": "olive",
        "regretful": "olive",
        "self-pity": "olive",
        "frustrated": "olive",
        "frustrating": "olive",
        "bored": "olive",
        "boring": "olive",
        "embarrassed": "olive",
        "embarrassing": "olive",
        "disillutioned": "olive",
        "dejected": "olive",
        "very grouchy": "olive",
        "very dejected": "olive",
        "glum": "olive",
        "indignant": "olive",
        "insulted": "olive",
        "offense": "olive",
        "confused": "olive",
        "agitated": "olive",
        "shaken": "yellow",
        "no hope": "yellow",
        "hopeless": "yellow",
        "empty": "yellow",
        "disgusted": "yellow",
        "disgusting": "yellow",
        "mortified": "yellow",
        "distressed": "yellow",
        "humiliated": "yellow",
        "ashamed": "yellow",
        "shame": "yellow",
        "frightened": "yellow",
        "frightening": "yellow",
        "sad": "yellow",
        "sadness": "yellow",
        "grieved": "yellow",
        "anguish": "yellow",
        "shocked": "yellow",
        "panicked": "yellow",
        "angry": "red",
        "afraid": "red",
        "terrified": "red",
        "horrified": "red",
        "truly horrifying": "red",
        "vengeful": "red",
        "ferocity": "red",
        "outraged": "red",
        "outrage": "red",
        "loathing": "red"
    },
    "icons": {
        "dwarf": "dwarf",
        "dwarves": "dwarf",
        "Miner": "dig-dug",
        "Woodworker": "crosscut-saw",
        "Carpenter": "crosscut-saw",
        "Bowyer": "crosscut-saw",
        "Woodcrafter": "crosscut-saw",
        "Woodcutter": "axe-in-stump",
        "Stoneworker": "stone-crafting",
        "Engraver": "stone-crafting",
        "Mason": "stone-crafting",
        "Stonecrafter": "stone-crafting",
        "Craftsman": "stone-crafting",
        "Craftsdwarf": "stone-crafting",
        "Strand Extractor": "stone-crafting",
        "Ranger": "wolf-trap",
        "Hunter": "wolf-trap",
        "Trapper": "wolf-trap",
        "Bowdwarf": "wolf-trap",
        "Bowman": "wolf-trap",
        "Elite Bowman": "wolf-trap",
        "Animal Caretaker": "love-howl",
        "Animal Trainer": "love-howl",
        "Animal Dissector": "love-howl",
        "Metalsmith": "anvil",
        "Furnace Operator": "anvil",
        "Weaponsmith": "anvil",
        "Armorer": "anvil",
        "Blacksmith": "anvil",
        "Metalcrafter": "anvil",
        "Jeweler": "cut-diamond",
        "Gem Cutter": "cut-diamond",
        "Gem Setter": "cut-diamond",
        "Leatherworker": "animal-hide",
        "Tanner": "animal-hide",
        "Bone Carver": "crossed-bones",
        "Weaver": "sewing-needle",
        "Shearer": "sewing-needle",
        "Glassmaker": "painted-pottery",
        "Potter": "painted-pottery",
        "Glazer": "painted-pottery",
        "Wax Worker": "honeycomb",
        "Beekeeper": "honeycomb",
        "Fishery Worker": "fishing",
        "Fisherman": "fishing",
        "Fish Dissector": "fishing",
        "Fish Cleaner": "fishing",
        "Farmer": "wheat",
        "Thresher": "wheat",
        "Miller": "wheat",
        "Herbalist": "wheat",
        "Planter": "wheat",
        "Presser": "wheat",
        "Milker": "cow",
        "Cheese Maker": "cow",
        "Spinner": "cow",
        "Gelder": "cow",
        "Brewer": "beer-stein",
        "Tavern Keeper": "beer-stein",
        "Cook": "cooking-pot",
        "Butcher": "meat-cleaver",
        "Clothier": "clothespin",
        "Dyer": "clothespin",
        "Engineer": "tinker",
        "Mechanic": "tinker",
        "Siege Engineer": "tinker",
        "Siege Operator": "tinker",
        "Pump Operator": "tinker",
        "Bone Doctor": "medical-pack",
        "Diagnoser": "medical-pack",
        "Doctor": "medical-pack",
        "Suturer": "medical-pack",
        "Surgeon": "medical-pack",
        "Architect": "freemasonry",
        "Alchemist": "fizzing-flask",
        "Trader": "two-coins",
        "broker": "two-coins",
        "Hammerman": "claw-hammer",
        "Hammer Lord": "claw-hammer",
        "Speardwarf": "spear-hook",
        "Spearman": "spear-hook",
        "Spearmaster": "spear-hook",
        "Pikedwarf": "spear-hook",
        "Pikeman": "spear-hook",
        "Pikemaster": "spear-hook",
        "Crossbowman": "crossbow",
        "Elite Crossbowman": "crossbow",
        "Wrestler": "biceps",
        "Elite Wrestler": "biceps",
        "Axedwarf": "battle-axe",
        "Axeman": "battle-axe",
        "Axe Lord": "battle-axe",
        "Swordsdwarf": "broadsword",
        "Swordsman": "broadsword",
        "Swordmaster": "broadsword",
        "Macedwarf": "flanged-mace",
        "Maceman": "flanged-mace",
        "Mace Lord": "flanged-mace",
        "Blowgunner": "blunderbuss",
        "Master Blowgunner": "blunderbuss",
        "Lasher": "whip",
        "Master Lasher": "whip",
        "Recruit": "dwarf-helmet",
        "Performer": "lyre",
        "Poet": "lyre",
        "Bard": "lyre",
        "Dancer": "lyre",
        "Sage": "bookmarklet",
        "Scholar": "bookmarklet",
        "Philosopher": "bookmarklet",
        "Mathematician": "bookmarklet",
        "Historian": "bookmarklet",
        "Astronomer": "bookmarklet",
        "Naturalist": "bookmarklet",
        "Chemist": "bookmarklet",
        "Geographer": "bookmarklet",
        "Scribe": "bookmarklet",
        "Papermaker": "bookmarklet",
        "Bookbinder": "bookmarklet",
        "Messenger": "tied-scroll"
    }
}
